apiVersion: apps/v1
kind: Deployment
metadata:
  name: pde-fluid-phi
  namespace: pde-fluid-phi
  labels:
    app: pde-fluid-phi
    version: v1.0.0
    component: neural-operator
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pde-fluid-phi
  template:
    metadata:
      labels:
        app: pde-fluid-phi
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: pde-fluid-phi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      
      # Init container for database migrations
      initContainers:
      - name: db-migrate
        image: pde-fluid-phi:latest
        command:
        - python
        - -m
        - src.pde_fluid_phi.utils.db_migrate
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: pde-fluid-phi-secrets
              key: database-url
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi" 
            cpu: "250m"
      
      containers:
      - name: pde-fluid-phi
        image: pde-fluid-phi:latest
        imagePullPolicy: Always
        
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        
        env:
        - name: PDE_FLUID_PHI_ENV
          value: "production"
        - name: PDE_FLUID_PHI_LOG_LEVEL
          value: "INFO"
        - name: PDE_FLUID_PHI_WORKERS
          value: "4"
        - name: OMP_NUM_THREADS
          value: "4"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: pde-fluid-phi-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: pde-fluid-phi-secrets
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: pde-fluid-phi-secrets
              key: secret-key
        
        # Resource requirements
        resources:
          limits:
            memory: "8Gi"
            cpu: "4"
            nvidia.com/gpu: "1"  # Optional GPU
          requests:
            memory: "2Gi"
            cpu: "1"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        # Startup probe for slow-starting containers
        startupProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 18  # 3 minutes total
          successThreshold: 1
        
        # Volume mounts
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: models
          mountPath: /app/models
        - name: temp
          mountPath: /app/temp
        - name: logs
          mountPath: /app/logs
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # Lifecycle hooks
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - "sleep 30"  # Grace period for request completion
      
      # Volumes
      volumes:
      - name: config
        configMap:
          name: pde-fluid-phi-config
      - name: models
        persistentVolumeClaim:
          claimName: pde-fluid-phi-models-pvc
      - name: temp
        emptyDir:
          sizeLimit: 1Gi
      - name: logs
        emptyDir:
          sizeLimit: 500Mi
      
      # Pod scheduling
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - pde-fluid-phi
              topologyKey: kubernetes.io/hostname
      
      # Tolerations for GPU nodes
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      
      # Node selector for GPU nodes (optional)
      nodeSelector:
        accelerator: nvidia-tesla-v100
      
      # Termination grace period
      terminationGracePeriodSeconds: 60
      
      # DNS configuration
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "2"
        - name: edns0

---
apiVersion: v1
kind: Service
metadata:
  name: pde-fluid-phi-service
  namespace: pde-fluid-phi
  labels:
    app: pde-fluid-phi
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: pde-fluid-phi
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pde-fluid-phi-ingress
  namespace: pde-fluid-phi
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - pde-fluid-phi.example.com
    secretName: pde-fluid-phi-tls
  rules:
  - host: pde-fluid-phi.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pde-fluid-phi-service
            port:
              number: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pde-fluid-phi-pdb
  namespace: pde-fluid-phi
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: pde-fluid-phi

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pde-fluid-phi-hpa
  namespace: pde-fluid-phi
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pde-fluid-phi
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: neural_operator_requests_per_second
      target:
        type: AverageValue
        averageValue: "10"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60